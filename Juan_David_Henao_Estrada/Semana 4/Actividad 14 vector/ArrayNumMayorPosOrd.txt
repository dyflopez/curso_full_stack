Vectores

Ejercicio Numero Mayor, Posición y Orden

El usuario debe ingresar n numeros
y el sistema deberá traer el número 
> y decir en que posicion está.
El sistema debe organizar la información
de < a > (de menor a mayor).


==================================

package utileria;

import java.util.Scanner;

public class Utilities {

    public static void mostrarMensaje(String mensaje) {
        System.out.print(mensaje);
    }
    public static String capturarTexto() {

        Scanner t = new Scanner(System.in);
        String texto=" ";

        try {
            texto = t.next();
        }catch (Exception e){
            Utilities.mostrarMensaje("error al capturar texto");
        }finally {
             Utilities.mostrarMensaje("Texto ingresado");
        }
        return texto;
    }

    public static int capturarEntero() {

        Scanner t = new Scanner(System.in);
        int numero = 0;

        try {
            //Utilities.capturarEntero();
            numero = t.nextInt();
        } catch (Exception e) {
            Utilities.mostrarMensaje("Error en el metodo capturarEntero " + e.getMessage());
        } finally {
            // Utilities.mostrarMensaje("continue");
        }
        return numero;
    }

}
==============================================

package metodos;

import utileria.Utilities;

import java.util.Arrays;

public class Metodos {
    /*  Vectores y Arrays

            Ejercicio Numero Mayor, Posición y Orden

            El usuario debe ingresar n numeros
            y el sistema deberá traer el número
            > y decir en que posicion está.
            El sistema debe organizar la información
            de < a > (de menor a mayor).*/
    int nveces;
    int vectorNumeros[] = new int[nveces];

    public void ingresarCantidad() {
        int vectorNumeros[] = new int[nveces];
        do {
            Utilities.mostrarMensaje("Ingrese cantidad de numeros que desea ingresar: ");
            nveces = Utilities.capturarEntero();

            if (nveces < 1) {
                Utilities.mostrarMensaje("\nERROR, el número digitado no corresponde, intente de nuevo ");
                Utilities.mostrarMensaje("---*****************************************************---\n");
            } else {
                System.out.println("continue");
            }

        } while (nveces < 1);
    }

    public void ingresarNumeros() {
        int vectorNumeros[] = new int[nveces];
        int i;
        for (i = 0; i < nveces; i++) {
            Utilities.mostrarMensaje("Ingrese numero: ");
            vectorNumeros[i] = Utilities.capturarEntero();
        }
        for (i = 0; i < nveces; i++) {
            Utilities.mostrarMensaje("[" + vectorNumeros[i] + "]" + " ");
        }

        int may = vectorNumeros[0];
        int men = vectorNumeros[0];

        int a;
        for (a = 0; a < nveces; a++) {
            if (vectorNumeros[a] > may) {
                may = vectorNumeros[a];

            } else if (vectorNumeros[a] < men) {
                men = vectorNumeros[a];
            }

        }
        int posicion=0;

        for (i = 0; i < nveces; i++) {
            for (int j = 1; j < (vectorNumeros.length - i); j++) {
                if (vectorNumeros[j - 1] > vectorNumeros[j]) {
                    posicion = vectorNumeros[j - 1];
                    vectorNumeros[j - 1] = vectorNumeros[j];
                    vectorNumeros[j] = posicion;
                }

            }
        }
        Utilities.mostrarMensaje("\nnumero mayor: " + may + "\nnumero menor: " + men);
        Utilities.mostrarMensaje("\nCantidad numeros " + nveces);
        Utilities.mostrarMensaje("\nOrden Ascendente :" + Arrays.toString(vectorNumeros));

    }

}
==============================================

import metodos.Metodos;

public class Main {
    public static void main(String[] args) {

      /*  Vectores y Arrays

        Ejercicio Numero Mayor, Posición y Orden

        El usuario debe ingresar n numeros
        y el sistema deberá traer el número
                > y decir en que posicion está.
                El sistema debe organizar la información
        de < a > (de menor a mayor).*/


        Metodos m = new Metodos();
        m.ingresarCantidad();
        m.ingresarNumeros();
       // m.ordenBurbuja1();
       // m.ordenarMenoraMayor();


        //m.ordenBurbuja();


    }
}

